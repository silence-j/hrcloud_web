<template>
  <div class="mt-20">
    <el-tabs
      type="border-card"
      @tab-click="handleClick">
      <!-- 待签订 -->
      <el-tab-pane>
        <span slot="label">待签订</span>
        <div class="table-setting-warp">
          <div class="table-setting-icon el-icon-setting" @click="chooseMsg(1)"></div>
          <el-table
            :data="waitemploymentListDatas"
            border @sort-change="sortChange">
            <el-table-column
              label="序号"
              type="index"
              width="60">
            </el-table-column>
            <template v-for="item in fieldList">
              <template v-if="item.prop == 'status'">
                <el-table-column
                  label="状态"
                  prop="status">
                  <template slot-scope="scope">
                      <span>{{scope.row.status | filterEmployStatus}}</span>
                  </template>
                </el-table-column>
              </template>
              <template v-else>
                <el-table-column
                  :label="item.name"
                  :prop="item.prop" :key="item.name" sortable min-width="120">
                </el-table-column>
              </template>
            </template>
            <el-table-column
              label="操作"
              fixed="right"
              width="160px">
              <template slot-scope="scope">
                <div class="operation">
                  <div v-if="scope.row.canOperate === 1">
                    <span v-show="(scope.row.status == 6 || scope.row.status == 2) && (permission.indexOf('签订'))!=-1" @click="concludeMsg(scope.row)">签订</span>
                    <span v-show="scope.row.status == 6 && (permission.indexOf('不签订'))!==-1" @click="UnconcludeMsg(scope.row)">不签订</span>
                    <span v-show="(scope.row.status == 2 || scope.row.status == 6) && (permission.indexOf('异地签')!=-1) "@click="placeSignMsg(scope.row)">异地签</span>
                  </div>
                </div>
              </template>
            </el-table-column>
          </el-table>
        </div>
        <pagination
          @size-change="waithandleEmploySizeChange"
          @current-change="waithandleEmployCurrentChange"
          :current-page="waitpageMsg.currentPage"
          :page-sizes="waitpageMsg.pageSizes"
          :page-size="waitpageMsg.pageSize"
          :total="waitpageMsg.total">
        </pagination>
      </el-tab-pane>
      <!-- 待解除 -->
      <el-tab-pane>
        <span slot="label">待解除</span>
        <div class="table-setting-warp">
          <div class="table-setting-icon el-icon-setting" @click="chooseMsg(2)"></div>
          <el-table
            :data="relieveEmploymentListDatas"
            border @sort-change="sortChange">
            <el-table-column
              label="序号"
              type="index"
              width="60">
            </el-table-column>
            <template v-for="item in fieldList2">
              <template v-if="item.prop == 'status'">
                <el-table-column
                  label="状态"
                  prop="status">
                  <template slot-scope="scope">
                      <span>{{scope.row.status | filterEmployStatus}}</span>
                  </template>
                </el-table-column>
              </template>
              <template v-else>
                <el-table-column
                  :label="item.name"
                  :prop="item.prop" :key="item.name" sortable min-width="120">
                </el-table-column>
              </template>
            </template>
            <el-table-column
              label="操作"
              fixed="right"
              width="160px">
              <template slot-scope="scope">
                <div class="operation">
                  <div v-if="scope.row.canOperate === 0">
                    <span v-show="scope.row.status == 1 && (permission.indexOf('查看'))!=-1" @click="lookSignMsg(scope.row)">查看</span>
                  </div>
                  <div v-else>
                    <span v-show="(scope.row.status == 6 || scope.row.status == 2) && (permission.indexOf('签订'))==-1" @click="concludeMsg(scope.row)">签订</span>
                    <span v-show="scope.row.status == 6 && (permission.indexOf('不签订'))!=-1" @click="UnconcludeMsg(scope.row)">不签订</span>
                    <span v-show="(scope.row.status == 1 || scope.row.status == 5) && (permission.indexOf('解除'))!=-1" @click="moveMsg(scope.row)">解除</span>
                    <span v-show="scope.row.status == 1 && (permission.indexOf('查看'))!=-1" @click="lookSignMsg(scope.row)">查看</span>
                  </div>
                </div>
              </template>
            </el-table-column>
          </el-table>
        </div>
        <pagination
          @size-change="relieveSizeChange"
          @current-change="relieveCurrentChange"
          :current-page="relievepageMsg.currentPage"
          :page-sizes="relievepageMsg.pageSizes"
          :page-size="relievepageMsg.pageSize"
          :total="relievepageMsg.total">
        </pagination>
      </el-tab-pane>
      <!-- 全部 -->
      <el-tab-pane>
        <span slot="label">全部</span>
        <div class="table-setting-warp">
          <div class="table-setting-icon el-icon-setting" @click="chooseMsg(3)"></div>
          <el-table
              :data="employmentListDatas"
              border @sort-change="sortChange">
              <el-table-column
                label="序号"
                type="index"
                width="60">
              </el-table-column>
              <template v-for="item in fieldList3">
                <template v-if="item.prop == 'status'">
                  <el-table-column
                    label="状态"
                    prop="status">
                    <template slot-scope="scope">
                      <div v-if="scope.row.status==2" class="moveBtn">
                        <el-tooltip placement="top" effect="light">
                          <div slot="content" style="width: 130px;height: 55px;overflow: auto;">{{scope.row.relieveReason}}</div>
                          <span>{{scope.row.status | filterEmployStatus}}</span>
                        </el-tooltip>
                      </div>
                      <div v-else>
                        <span>{{scope.row.status | filterEmployStatus}}</span>
                      </div>
                    </template>
                  </el-table-column>
                </template>
                <template v-else>
                  <el-table-column
                    :label="item.name"
                    :prop="item.prop" :key="item.name" sortable min-width="120">
                  </el-table-column>
                </template>
              </template>
              <el-table-column
                label="操作"
                fixed="right"
                width="160px">
                <template slot-scope="scope">
                  <div class="operation">
                    <div v-if="scope.row.canOperate === 0">
                      <span v-show="(scope.row.status == 1 || scope.row.status == 3 || scope.row.status == 4 || scope.row.status == 5 ) && (permission.indexOf('查看'))!==-1" @click="lookSignMsg(scope.row)">查看</span>
                    </div>
                    <div v-else>
                      <span v-show="(scope.row.status == 6 || scope.row.status == 2) && (permission.indexOf('签订'))!==-1" @click="concludeMsg(scope.row)">签订</span>
                      <span v-show="scope.row.status == 6 && (permission.indexOf('不签订'))!==-1" @click="UnconcludeMsg(scope.row)">不签订</span>
                      <span v-show="(scope.row.status == 1 || scope.row.status == 5) && (permission.indexOf('解除'))!==-1" @click="moveMsg(scope.row)">解除</span>
                      <span v-show="scope.row.status == 3 && (permission.indexOf('解除详情'))!==-1" @click="lookMoveMsg(scope.row)">解除详情</span>
                      <span v-show="(scope.row.status == 1 || scope.row.status == 3 || scope.row.status == 4 || scope.row.status == 5 ) && (permission.indexOf('查看'))!==-1" @click="lookSignMsg(scope.row)">查看</span>
                      <span v-show="(scope.row.status == 2 || scope.row.status == 6) && (permission.indexOf('异地签')!==-1) "@click="placeSignMsg(scope.row)">异地签</span>
                    </div>
                  </div>
                </template>
              </el-table-column>
          </el-table>
        </div>
        <br/>
        <el-button type="primary" size="mini" @click="exportBtn" v-show="permission.indexOf('导出')">导出</el-button>
        <pagination
          @size-change="handleEmploySizeChange"
          @current-change="handleEmployCurrentChange"
          :current-page="pageMsg.currentPage"
          :page-sizes="pageMsg.pageSizes"
          :page-size="pageMsg.pageSize"
          :total="pageMsg.total">
        </pagination>
      </el-tab-pane>
    </el-tabs>
    <!-- 签订协议 -->
    <el-dialog title="签订协议" :visible.sync="cancelVisible" width="500px">
      <div class="module-opera">
        <el-form :model="signForm" label-width="80px">
          <el-form-item label="信息：">
            <el-checkbox-group v-model="signForm.checkedNames" class="checkbox-box">
              <el-checkbox v-for="(check, index) in checkSelect" :label="check.value" :key="index">{{check.label}}</el-checkbox>
            </el-checkbox-group>
          </el-form-item>
          <el-form-item label="备注：">
            <el-input type="textarea" v-model="signForm.remark"></el-input>
          </el-form-item>
        </el-form>
      </div>
      <span slot="footer" class="dialog-footer">
          <el-button type="primary" @click="concludeSave" size="mini">保 存</el-button>
          <el-button type="primary" @click="concludeSure" size="mini">确定签订</el-button>
      </span>
    </el-dialog>
    <!-- 查看签订协议信息 -->
    <el-dialog title="查看签订协议信息" :visible.sync="cancelCheckVisible" width="500px">
      <el-form label-width="80px">
        <el-form-item label="信息：">
          {{employeeInfo}}&nbsp;&nbsp;{{schoolSignedInfo}}&nbsp;&nbsp;{{unitSignedInfo}}&nbsp;&nbsp;{{talentsInfo}}
        </el-form-item>
        <el-form-item label="备注：">
          <span v-if="signDetailDatas.remark">{{signDetailDatas.remark}}</span>
          <span v-else class="color999">未填写</span>
        </el-form-item>
      </el-form>
      <span slot="footer" class="dialog-footer">
        <el-button @click="cancelCheckVisible = false" class="false" size="mini">关 闭</el-button>
      </span>
    </el-dialog>
    <!-- 不签订协议 -->
    <el-dialog  title="不签订协议" :visible.sync="UncancelVisible" width="500px">
      <div class="module-opera">
        <el-form :model="UnsignForm" label-width="125px">
          <el-form-item label="不签订原因：" class="mustForm">
            <el-select v-model="UnsignForm.reason" placeholder="请选择">
              <el-option
                v-for="item in resonSelect"
                :key="item.value"
                :label="item.label"
                :value="item.value">
              </el-option>
            </el-select>
          </el-form-item>
        </el-form>
      </div>
      <span slot="footer" class="dialog-footer">
        <el-button @click="UncancelVisible = false" class="false" size="mini">取 消</el-button>
        <el-button type="primary" @click="UnconcludeSave" size="mini">确 定</el-button>
      </span>
    </el-dialog>
    <!-- 解除 -->
    <el-dialog title="解除" :visible.sync="moveVisible" width="500px">
      <div class="module-opera">
        <el-form :model="moveForm" label-width="85px">
          <el-form-item label="类型：" class="mustForm">
            <el-radio-group v-model="moveForm.relieveType">
              <el-radio label= 0 >解除</el-radio>
              <el-radio label= 1 >解除并改派</el-radio>
            </el-radio-group>
          </el-form-item>
          <el-form-item label="原因：" class="mustForm">
            <el-select v-model="moveForm.reason" placeholder="请选择">
              <el-option
                v-for="item in reasonOption"
                :key="item.id"
                :label="item.codeText"
                :value="item.id">
              </el-option>
            </el-select>
          </el-form-item>
          <el-form-item label="说明：">
           <el-input type="textarea" v-model="moveForm.remark"></el-input>
          </el-form-item>
        </el-form>
      </div>
      <span slot="footer" class="dialog-footer">
        <el-button @click="moveVisible = false" class="false" size="mini">取 消</el-button>
        <el-button type="primary" @click="moveSave" size="mini">确 定</el-button>
      </span>
    </el-dialog>
    <!-- 查看解除信息 -->
    <el-dialog title="查看解除信息" :visible.sync="moveCheckVisible" width="500px">
      <el-form label-width="100px">
        <el-row align="center">
          <el-form-item label="类　型:">
            <span>{{MoveDetailDatas.relieveType | filterRelieveType}}</span>
          </el-form-item>
        </el-row>
        <el-row align="center">
          <el-form-item label="原　因:">
            <span>{{MoveDetailDatas.relieveReason}}</span>
          </el-form-item>
        </el-row>
        <el-row align="center">
          <el-form-item label="说　明:">
            <span v-if="MoveDetailDatas.remark">{{MoveDetailDatas.remark}}</span>
            <span v-else class="color999">未填写</span>
          </el-form-item>
        </el-row>
      </el-form>
      <span slot="footer" class="dialog-footer">
          <el-button @click="moveCheckVisible = false" class="false" size="mini">取 消</el-button>
      </span>
    </el-dialog>
    <!-- 异地签 -->
    <el-dialog title="异地签" :visible.sync="SignVisible" width="500px">
      <el-form :model="SignForm" label-width="110px">
       <el-form-item label="签订主体：" class="mustForm">
        <div class="search-form_item">
          <search-dept-tree :orgDatas="orgDatas1" ref="deptTree"/>
        </div>
        <!-- <search-tree
          :showTreeTag="showTreeTag1"
            @show-tree="showDeptTree1"
            @changeSerId="getCompanyId"
            :bindData="'company'"
            ref="deptSearchTree1"
            :placeholderTxt="'请输入签订主体'"></search-tree>
          -->
        </el-form-item>
      </el-form>
      <span slot="footer" class="dialog-footer">
        <el-button @click="SignVisible = false" class="false" size="mini">取 消</el-button>
        <el-button type="primary" @click="SignSave" size="mini">确 定</el-button>
      </span>
    </el-dialog>
    <!--选择显示字段-->
    <ChooseColumn :chooseData="chooseData" ref="chooseColumn"></ChooseColumn>
    <!-- 导出列表 -->
    <form style="display:none" name="form" method="POST" ref="submitExcel" id="submitExcel" :action="hostBaseUrl+'/user/user/work/agreement/exportDetail'">
      <p>status: <input type="text" id="status" name="status" value="" /></p>
      <p>keyword: <input type="text" id="keyword" name="keyword" value="" /></p>
      <input type="submit" value="Submit"/>
    </form>
  </div>
</template>
<script>
  import { mapGetters, mapMutations } from 'vuex'
  import { getEmploymentList, getEmploySign, getEmployUnSign, getEmployMove, getAgreementDetail, getEmployOffsite, getEmploymentWaitReleaseList } from 'static/api/contract/contract'
  import { getEmployStatus, getRelieveType, getRelieveReasonType } from 'assets/js/filters'
  import Pagination from 'components/Pagination.vue'
  import { Message } from 'element-ui'
/*   import SearchTree from 'components/SearchTree' */
  import { getToken } from 'assets/js/util'
  import {listByUserId, getSysDic} from 'static/api/common/common'
  import ChooseColumn from 'components/ChooseColumn'
  import { hostBaseUrl } from 'utils/config'
  import { getExmine } from 'assets/js/exmine'
  import SearchDeptTree from 'components/SearchDeptTree'
  export default {
    data () {
      return {
        orgDatas1: {
          filterName: '',
          orgId: '',
          dataTree: [],
          showTree: false,
          isLimit: '0'
        },
        tabTitle: '待签订',
        hostBaseUrl: '',
        employmentListDatas: [],
        waitemploymentListDatas: [],
        relieveEmploymentListDatas: [],
        signDetailDatas: [],
        MoveDetailDatas: [],
        pageMsg: {
          currentPage: 1,
          pageSize: 10,
          pageSizes: [10, 20, 50],
          total: 0
        },
        waitpageMsg: {
          currentPage: 1,
          pageSize: 10,
          pageSizes: [10, 20, 50],
          total: 0
        },
        relievepageMsg: {
          currentPage: 1,
          pageSize: 10,
          pageSizes: [10, 20, 50],
          total: 0
        },
        /** 签订**/
        cancelVisible: false,
        signForm: {
          uwaId: '',
          remark: '',
          checkedNames: []
        },
        checkSelect: [
          {label: '员工本人已签', value: '0'},
          {label: '学校已盖章', value: '1'},
          {label: '单位已盖章 ', value: '2'},
          {label: '人才中心已盖章', value: '3'}
        ],
        employeeInfo: '',
        schoolSignedInfo: '',
        unitSignedInfo: '',
        talentsInfo: '',
        /** 不签订**/
        UncancelVisible: false,
        UnsignForm: {
          id: '',
          reason: ''
        },
        resonSelect: [
          {value: '离职', label: '离职'},
          {value: '调出', label: '调出'},
          {value: '终止挂靠', label: '终止挂靠'},
          {value: '其它', label: '其它'}
        ],
        /** 解除**/
        moveVisible: false,
        moveForm: {
          uwaId: '',
          relieveType: '',
          reason: '',
          remark: ''
        },
        /* 就业协议解除原因 */
        reasonOption: [],
        moveCheckVisible: false,
        cancelCheckVisible: false,
        reportForm: {
          uwaId: ''
        },
        /* 异地签 */
        SignVisible: false,
        SignForm: {
          orgName: '',
          signTime: ''
        },
        showTreeTag1: false,
        userOrgId: '',
        contractSubjectId: '',
        // 选择显示字段
        fieldList: [],
        fieldList2: [],
        fieldList3: [],
        chooseData: {
          chooseVisible: false,
          filedType: 'WorkAgreement',
          fieldList: []
        },
        type: 1,
        prop1: '',
        order1: '',
        prop2: '',
        order2: '',
        prop3: '',
        order3: '',
        options: this.getDeepSearchOptions
      }
    },
    components: {
      Pagination,
     /*  SearchTree, */
      ChooseColumn,
      SearchDeptTree
    },
    computed: {
      ...mapGetters(['getContracrArr', 'getContractClicked', 'getIsDel', 'getDeepSearchOptions']),
      permission () {
        return getExmine().infoContractEmployment
      },
      waitemployParams () {
        return {
          keyword: this.getContracrArr.keyword,
          status: 6,
          page: this.waitpageMsg.currentPage,
          size: this.waitpageMsg.pageSize,
          prop: this.prop1,
          order: this.order1,
          options: this.getDeepSearchOptions
        }
      },
      RelieveEmployParams () {
        return {
          keyword: this.getContracrArr.keyword,
          /* status: 4, */
          page: this.relievepageMsg.currentPage,
          size: this.relievepageMsg.pageSize,
          prop: this.prop2,
          order: this.order2,
          options: this.getDeepSearchOptions
        }
      },
      employParams () {
        return {
          keyword: this.getContracrArr.keyword,
          status: this.getContracrArr.status,
          page: this.pageMsg.currentPage,
          size: this.pageMsg.pageSize,
          prop: this.prop3,
          order: this.order3,
          options: this.getDeepSearchOptions
        }
      }
    },
    methods: {
      ...mapMutations({
        setDelType: 'SET_ACCEPT_IS_DELETE'
      }),
      /* 导出 */
      exportBtn () {
        document.getElementById('status').setAttribute('value', this.getContracrArr.status ? this.getContracrArr.status : '')
        document.getElementById('keyword').setAttribute('value', this.getContracrArr.keyword ? this.getContracrArr.keyword : '')
        this.$refs.submitExcel.submit()
      },
      /* tab 切换 */
      handleClick (tab, event) {
        if (tab.index === '0') {
          this.type = 1
          this.tabTitle = '待签订'
          this._getUserFiled()
          this.$store.commit('SET_CONTRACT_ALL_SELECT', false)
        }
        if (tab.index === '1') {
          this.type = 2
          this.tabTitle = '待解除'
          this._getUserFiled()
          this.$store.commit('SET_CONTRACT_ALL_SELECT', false)
        }
        if (tab.index === '2') {
          this.type = 3
          this.tabTitle = '全部'
          this._getUserFiled()
          this.$store.commit('SET_CONTRACT_ALL_SELECT', true)
        }
      },
      /* 查看 */
      lookMoveMsg (row) {
        this.moveCheckVisible = true
        getAgreementDetail(row.uwaId).then((data) => {
          if (data.result) {
            this.MoveDetailDatas = data.result
          }
        })
      },
      lookSignMsg (row) {
        this.cancelCheckVisible = true
        this.signForm.checkedNames = []
        getAgreementDetail(row.uwaId).then((data) => {
          if (data.result) {
            this.signDetailDatas = data.result
          }
          if (this.signDetailDatas.employeeSigned === 1) {
            this.employeeInfo = '员工本人已签'
          }
          if (this.signDetailDatas.schoolSigned === 1) {
            this.schoolSignedInfo = '学校已盖章'
          }
          if (this.signDetailDatas.unitSigned === 1) {
            this.unitSignedInfo = '单位已盖章'
          }
          if (this.signDetailDatas.talentsSigned === 1) {
            this.talentsInfo = '人才中心已盖章'
          }
        })
      },
      /** 签订协议**/
      concludeMsg (row) {
        this.signForm.uwaId = row.uwaId
        this.signForm.checkedNames = []
        getAgreementDetail(row.uwaId).then((data) => {
          if (data.result) {
            this.signDetailDatas = data.result
          }
          if (this.signDetailDatas.employeeSigned === 1) {
            this.signForm.checkedNames.push('0')
          }
          if (this.signDetailDatas.schoolSigned === 1) {
            this.signForm.checkedNames.push('1')
          }
          if (this.signDetailDatas.unitSigned === 1) {
            this.signForm.checkedNames.push('2')
          }
          if (this.signDetailDatas.talentsSigned === 1) {
            this.signForm.checkedNames.push('3')
          }
          if (this.signDetailDatas.remark !== '' || data.data.remark !== null) {
            this.signForm.remark = data.result.remark
          }
        })
        this.cancelVisible = true
      },
      /* 签订保存 */
      concludeSave () {
        let SaveParams = {
          uwaId: this.signForm.uwaId,
          remark: this.signForm.remark ? this.signForm.remark : '',
          employeeSigned: this.signForm.checkedNames.indexOf('0') !== -1 ? 1 : 0,
          schoolSigned: this.signForm.checkedNames.indexOf('1') !== -1 ? 1 : 0,
          unitSigned: this.signForm.checkedNames.indexOf('2') !== -1 ? 1 : 0,
          talentsSigned: this.signForm.checkedNames.indexOf('3') !== -1 ? 1 : 0
        }
        getEmploySign(SaveParams).then((data) => {
          this.$message.success('操作成功')
          setTimeout(() => {
            this.cancelVisible = false
            this._getWaitEmploymentList()
            this._getEmploymentList()
          }, 500)
        })
      },
      /* 确定签订 */
      concludeSure () {
        let SureParams = {
          uwaId: this.signForm.uwaId,
          remark: this.signForm.remark ? this.signForm.remark : '',
          employeeSigned: this.signForm.checkedNames.indexOf('0') !== -1 ? 1 : 0,
          schoolSigned: this.signForm.checkedNames.indexOf('1') !== -1 ? 1 : 0,
          unitSigned: this.signForm.checkedNames.indexOf('2') !== -1 ? 1 : 0,
          talentsSigned: this.signForm.checkedNames.indexOf('3') !== -1 ? 1 : 0,
          status: 1
        }
        getEmploySign(SureParams).then((data) => {
          this.$message.success('操作成功')
          setTimeout(() => {
            this.cancelVisible = false
            this._getEmploymentList()
            this._getWaitEmploymentList()
          }, 500)
        })
      },
      /** 不签订协议**/
      UnconcludeMsg (row) {
        this.UnsignForm.uwaId = row.uwaId
        this.UncancelVisible = true
      },
      UnconcludeSave () {
        let Params = {
          uwaId: this.UnsignForm.uwaId,
          relieveReason: this.UnsignForm.reason
        }
        if (!this.UnsignForm.reason) {
          Message.warning({
            message: '请填写原因'
          })
          return
        }
        getEmployUnSign(Params).then((data) => {
          this.$message.success('操作成功')
          setTimeout(() => {
            this.UncancelVisible = false
            this._getEmploymentList()
            this._getWaitEmploymentList()
          }, 500)
        })
      },
      /** 报到
      reportMsg (row) {
        this.reportForm.uwaId = row.uwaId
        this.$confirm('确定该' + row.name + '员工已来报到，可签订劳动合同？', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          let Params = {
            uwaId: this.reportForm.uwaId
          }
          getEmployBaodao(Params).then(data => {
              let baodaoId = ''
              if (data.result) {
                baodaoId = data.result.contractId
                this.$confirm('报到成功！是否现在立即签订' + row.name + '劳动合同？', '提示', {
                  confirmButtonText: '立即签订',
                  cancelButtonText: '稍后签订',
                  type: 'warning'
                }).then(() => {
                  setTimeout(() => {
                    this.$router.push({
                      name: '合同编辑',
                      params: {
                        contractId: baodaoId,
                        type: 'edit'
                      }
                    })
                  }, 500)
                }).catch(() => {
                  this._getEmploymentList()
                })
              }
            })
        }).catch(() => {})
      },**/
      /** 解除**/
      moveMsg (row) {
        this.moveForm.relieveType = ''
        this.moveForm.reason = ''
        this.moveForm.remark = ''
        this.moveForm.uwaId = row.uwaId
        this.moveVisible = true
        if (row.status === 5 && row.graduationDate) {
          this.graduationDate = new Date(row.graduationDate).getFullYear()
          this.nowDate = new Date().getFullYear()
          if (this.graduationDate < this.nowDate) {
            Message.warning({
              message: '该人员已不是应届生，不能解除!'
            })
            this.moveVisible = false
          }
        }
      },
      moveSave () {
        let Params = {
          uwaId: this.moveForm.uwaId,
          relieveType: Number(this.moveForm.relieveType),
          relieveReasonType: this.moveForm.reason,
          remark: this.moveForm.remark
        }
        if (!this.moveForm.relieveType) {
          Message.warning({
            message: '请选择类型'
          })
          return
        } else if (!this.moveForm.reason) {
          Message.warning({
            message: '请选择原因'
          })
          return
        }
        getEmployMove(Params).then((data) => {
          this.$message.success('操作成功')
          setTimeout(() => {
            this._getEmploymentList()
            this._getRelieveEmploymentList()
            this.moveVisible = false
          }, 500)
        })
      },
      /** 全部列表**/
      _getEmploymentList () {
        getEmploymentList(this.employParams).then((data) => {
          if (data.result) {
            if (data.result.records) {
              this.employmentListDatas = data.result.records
            }
            this.pageMsg.total = data.result.total
          }
        })
      },
      /** 分页**/
      handleEmploySizeChange (pageSize) {
        this.pageMsg.pageSize = pageSize
        this._getEmploymentList()
      },
      handleEmployCurrentChange (currentPage) {
        this.pageMsg.currentPage = currentPage
        this._getEmploymentList()
      },
      /** 待签订列表**/
      _getWaitEmploymentList () {
        getEmploymentList(this.waitemployParams).then((data) => {
          if (data.result) {
            if (data.result.records) {
              this.waitemploymentListDatas = data.result.records
            }
            this.waitpageMsg.total = data.result.total
          }
        })
      },
      /** 分页**/
      waithandleEmploySizeChange (pageSize) {
        this.waitpageMsg.pageSize = pageSize
        this._getWaitEmploymentList()
      },
      waithandleEmployCurrentChange (currentPage) {
        this.waitpageMsg.currentPage = currentPage
        this._getWaitEmploymentList()
      },
      /** 待解除列表**/
      _getRelieveEmploymentList () {
        getEmploymentWaitReleaseList(this.RelieveEmployParams).then(data => {
          if (data.result) {
            if (data.result.records) {
              this.relieveEmploymentListDatas = data.result.records
            }
            this.relievepageMsg.total = data.result.total
          }
        })
      },
      /** 分页**/
      relieveCurrentChange (pageSize) {
        this.relievepageMsg.pageSize = pageSize
        this._getRelieveEmploymentList()
      },
      relieveSizeChange (currentPage) {
        this.relievepageMsg.currentPage = currentPage
        this._getRelieveEmploymentList()
      },
      /* 异地签 */
      placeSignMsg (row) {
        this.SignVisible = true
        this.contractId = row.uwaId
        setTimeout(() => {
          this.$refs.deptTree.clearSelectTree()
        })
        setTimeout(() => {
          this.$refs.deptTree.getCompany('1')
        }, 200)
      },
      SignSave () {
        let param = {
          id: this.contractId,
          /* agreeSubjectId: this.contractSubjectId */
          agreeSubjectId: this.orgDatas1.orgId
        }
        if (!param.agreeSubjectId) {
          Message.warning({
            message: '请选择签订主体!'
          })
          return
        }
        getEmployOffsite(param).then(data => {
          this.$message.success('操作成功')
          this._getWaitEmploymentList()
          this._getEmploymentList()
          this.SignVisible = false
        })
      },
      // 选择显示字段
      chooseMsg (type) {
        this.chooseData.chooseVisible = true
        if (type === 1) {
          this.chooseData.fieldList = this.fieldList
        } else if (type === 2) {
          this.chooseData.fieldList = this.fieldList2
        } else if (type === 3) {
          this.chooseData.fieldList = this.fieldList3
        }
        this.$refs.chooseColumn.chooseMsg()
      },
      // 获取原来选择字段
      _getUserFiled () {
        let preload = {
          userId: getToken('loginId').toString(),
          type: 'WorkAgreement'
        }
        if (this.type === 1) {
          this.fieldList = []
          listByUserId(preload).then((data) => {
            if (data.result.length) {
              data.result.forEach((obj) => {
                this.fieldList.push({
                  name: obj.name,
                  prop: obj.prop,
                  orderColumn: obj.orderColumn
                })
              })
              setTimeout(() => {
                this._getWaitEmploymentList()
              }, 10)
            }
          })
        } else if (this.type === 2) {
          this.fieldList2 = []
          listByUserId(preload).then(data => {
            if (data.result.length) {
              data.result.forEach((obj) => {
                this.fieldList2.push({
                  name: obj.name,
                  prop: obj.prop,
                  orderColumn: obj.orderColumn
                })
              })
              setTimeout(() => {
                this._getRelieveEmploymentList()
              }, 400)
            }
          })
        } else if (this.type === 3) {
          this.fieldList3 = []
          listByUserId(preload).then((data) => {
            if (data.result.length) {
              data.result.forEach((obj) => {
                this.fieldList3.push({
                  name: obj.name,
                  prop: obj.prop,
                  orderColumn: obj.orderColumn
                })
              })
              setTimeout(() => {
                this._getEmploymentList()
              }, 400)
            }
          })
        }
      },
      // 排序
      sortChange (column, prop, order) {
        if (this.type === 1) {
          if (column && column.prop) {
            let orderColumn1 = this.fieldList.filter(item => item.prop === column.prop)[0].orderColumn
            this.prop1 = orderColumn1
            this.order1 = column.order
            this._getWaitEmploymentList()
          } else {
            this.prop1 = ''
            this.order1 = ''
            this._getWaitEmploymentList()
          }
        } else if (this.type === 2) {
          if (column && column.prop) {
            let orderColumn2 = this.fieldList2.filter(item => item.prop === column.prop)[0].orderColumn
            this.prop2 = orderColumn2
            this.order2 = column.order
            this._getRelieveEmploymentList()
          } else {
            this.prop2 = ''
            this.order2 = ''
            this._getRelieveEmploymentList()
          }
        } else if (this.type === 3) {
          if (column && column.prop) {
            let orderColumn3 = this.fieldList3.filter(item => item.prop === column.prop)[0].orderColumn
            this.prop3 = orderColumn3
            this.order3 = column.order
            this._getEmploymentList()
          } else {
            this.prop3 = ''
            this.order3 = ''
            this._getEmploymentList()
          }
        }
      },
      /* 获取数字字典 */
      async _getQueryClassList () {
      /* 就业协议解除 */
        await getSysDic('relieveReasonType').then((data) => {
          if (data.result) {
            console.log('就业协议解除', data.result)
            data.result.forEach(item => {
              if (item.enable === 1) {
                this.reasonOption.push(item)
              }
            })
          }
        })
      }
    },
    filters: {
      filterEmployStatus (status) {
        return getEmployStatus(status)
      },
      filterRelieveType (value) {
        return getRelieveType(value)
      },
      filterRelieveReasonType (value) {
        return getRelieveReasonType(value)
      }
    },
    watch: {
      getContractClicked (val) {
        if (val) {
          if (this.tabTitle === '待签订') {
            this.waithandleEmployCurrentChange(1)
          } else if (this.tabTitle === '待解除') {
            this.relieveCurrentChange(1)
          } else if (this.tabTitle === '全部') {
            this.handleEmployCurrentChange(1)
          }
        }
        this.$store.commit('SET_CONTRACT_CLICKED', false)
      },
      getIsDel (val) {
        if (val) {
          if (this.tabTitle === '待签订') {
            this.waithandleEmployCurrentChange(1)
            this._getWaitEmploymentList()
          } else if (this.tabTitle === '待解除') {
            this.relieveCurrentChange(1)
            this._getRelieveEmploymentList()
          } else if (this.tabTitle === '全部') {
            this.handleEmployCurrentChange(1)
            this._getEmploymentList()
          }
         /*  this.pageMsg.currentPage = 1
          this._getFundList() */
        }
        this.setDelType('')
      },
      getDeepSearchOptions (val) {
        if (val) {
          if (this.tabTitle === '待签订') {
            this.employParams.options = val
            this.waithandleEmployCurrentChange(1)
          } else if (this.tabTitle === '待解除') {
            this.RelieveEmployParams.options = val
            this.relieveCurrentChange(1)
          } else if (this.tabTitle === '全部') {
            this.employParams.options = val
            this.handleEmployCurrentChange(1)
          }
          /* this.listParams.options = val
          this.handleCurrentChange(1) */
        }
      }
    },
    created () {
      this._getUserFiled()
      this.hostBaseUrl = hostBaseUrl
      this._getQueryClassList()
    }
  }
</script>
<style scoped lang="less">
.el-select{
  width:100%;
}
.checkbox-box{
  .el-checkbox{
    &:last-child{
      margin-left:0px;
    }
  }
}
</style>
